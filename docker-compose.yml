version: '3.7'

services:
  api:
    restart: on-failure
    build:
      context: .
      dockerfile: Docker_local/Dockerfile

    environment:
      - SECRET_KEY=${SECRET_KEY}
      - HOST_ENV=${HOST_ENV}
      - DB_NAME=airtech_v1
      - DB_PASS=airtech_v1_flashy
      - DB_HOST=database
      - DB_USER=docker-user
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

    volumes:
      - .:/airtech-api

    ports:
      - "9000:9000"
      - "8089:8089"
      - "5555:5555"

    depends_on:
      - database
      - redis

    stdin_open: true
    tty: true

  database:
    restart: on-failure
    image: postgres:10.5-alpine

    environment:
      - POSTGRES_USER=docker-user
      - POSTGRES_PASSWORD=airtech_v1_flashy
      - POSTGRES_DB=airtech_v1

    volumes:
      - tmp-docker_db:/var/lib/postgresql/data

    ports:
      - '5433:5432'

  redis:
    restart: always
    image: redis:alpine
    ports:
      - '6379:6379'

volumes:
  tmp-docker_db:
